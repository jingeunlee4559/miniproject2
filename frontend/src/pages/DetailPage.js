import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from '../axios';
import '../css/DetailPage.css'; // CSS ÌååÏùºÏóêÏÑú Ïä§ÌÉÄÏùºÏùÑ Ï†ïÏùòÌï©ÎãàÎã§.
import { Row, Button, Form, Col, Container } from 'react-bootstrap';
import Swal from 'sweetalert2';
import CommentForm from '../components/CommentForm';
import CommentList from '../components/CommentList';

const DetailPage = () => {
    const { board_seq } = useParams();
    // const [boardDetail, setBoardDetail] = useState(null);
    const [isEditing, setIsEditing] = useState(false);
    const [editedTitle, setEditedTitle] = useState('');
    const [editedContent, setEditedContent] = useState('');
    const [selectedFile, setSelectedFile] = useState(null);
    const [previewImage, setPreviewImage] = useState('');
    const navigate = useNavigate();
    const seq = window.sessionStorage.getItem('mem_seq');
    const [comments, setComments] = useState([
        {
            name: 'Ïó¨ÌñâÎü¨Î≤Ñ',
            text: 'Ï†ïÎßê ÌûêÎßÅÎêòÎäî Ïó¨ÌñâÏßÄÏòÄÏñ¥Ïöî üåø',
            date: '2025-08-13',
            avatar: '/img/user1.png',
        },
        {
            name: 'ÎßõÏßëÌÉêÌóòÍ∞Ä',
            text: 'Í∑ºÏ≤ò ÎßõÏßë Ï∂îÏ≤ú Î∂ÄÌÉÅÎìúÎ†§Ïöî üòã',
            date: '2025-08-12',
            avatar: '/img/user2.png',
        },
    ]);

    const addComment = (text) => {
        const newComment = {
            name: 'ÏùµÎ™Ö',
            text,
            date: new Date().toISOString().split('T')[0],
            avatar: '/img/default-avatar.png',
        };
        setComments([newComment, ...comments]);
    };

    const mockData = [
        {
            board_seq: 1,
            board_title: 'Ï†úÏ£ºÎèÑ 3Î∞ï 4Ïùº Ïó¨Ìñâ ÏΩîÏä§ Ï∂îÏ≤ú',
            board_at: '2025-08-01T12:00:00',
            board_views: 320,
            writer: 'Ïó¨ÌñâÎü¨Î≤Ñ',
            content:
                'Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...Ï†úÏ£ºÎèÑ Ïó¨Ìñâ 3Î∞ï 4Ïùº Ï∂îÏ≤ú ÏΩîÏä§Îäî...',
        },
        { board_seq: 2, board_title: 'Î∂ÄÏÇ∞ Ïó¨Ìñâ ÍøÄÌåÅ Ï¥ùÏ†ïÎ¶¨', board_at: '2025-08-02T09:30:00', board_views: 280, writer: 'Î∂ÄÏÇ∞ÌÜ†Î∞ïÏù¥', content: 'Î∂ÄÏÇ∞ÏóêÏÑú Íº≠ Í∞ÄÎ¥êÏïº Ìï† Í≥≥ÏùÄ...' },
        { board_seq: 3, board_title: 'Í∞ïÎ¶â Î∞îÎã§Î∑∞ Ïπ¥Ìéò BEST 5', board_at: '2025-08-03T14:20:00', board_views: 210, writer: 'Ïπ¥ÌéòÌóåÌÑ∞', content: 'Í∞ïÎ¶â Î∞îÎã§Î∑∞ Ïπ¥Ìéò Ï∂îÏ≤ú Î¶¨Ïä§Ìä∏...' },
        { board_seq: 4, board_title: 'ÏÑúÏö∏ Í∑ºÍµê ÎãπÏùºÏπòÍ∏∞ Ïó¨ÌñâÏßÄ Ï∂îÏ≤ú', board_at: '2025-08-04T10:15:00', board_views: 350, writer: 'ÎÇòÎì§Ïù¥Ïôï', content: 'ÏÑúÏö∏ Í∑ºÍµêÏóêÏÑú ÎãπÏùºÏπòÍ∏∞Î°ú Í∞ÄÎ≥º ÎßåÌïú Í≥≥ÏùÄ...' },
        { board_seq: 5, board_title: 'Ï†ÑÏ£º ÌïúÏò•ÎßàÏùÑ ÎßõÏßë Î¶¨Ïä§Ìä∏', board_at: '2025-08-05T16:45:00', board_views: 295, writer: 'ÎßõÏßëÎü¨', content: 'Ï†ÑÏ£º ÌïúÏò•ÎßàÏùÑÏóêÏÑú Íº≠ Í∞ÄÏïº ÌïòÎäî ÎßõÏßëÏùÄ...' },
        { board_seq: 6, board_title: 'ÏÜçÏ¥à Ïó¨Ìñâ Í∞ÄÎ≥º ÎßåÌïú Í≥≥', board_at: '2025-08-06T18:00:00', board_views: 330, writer: 'ÏÜçÏ¥àÎßàÎãàÏïÑ', content: 'ÏÜçÏ¥à Ïó¨ÌñâÏóêÏÑú ÎπºÎÜìÏùÑ Ïàò ÏóÜÎäî Î™ÖÏÜå...' },
        { board_seq: 7, board_title: 'Í≤ΩÏ£º Ïó≠ÏÇ¨ Ïó¨Ìñâ ÏΩîÏä§', board_at: '2025-08-07T13:40:00', board_views: 190, writer: 'Ïó≠ÏÇ¨ÌÉêÎ∞©', content: 'Í≤ΩÏ£ºÏóêÏÑú Ïó≠ÏÇ¨ Ïó¨ÌñâÏùÑ Ï¶êÍ∏∞Î†§Î©¥...' },
        { board_seq: 8, board_title: 'Ïó¨Ïàò Î∞§Î∞îÎã§ Ïó¨Ìñâ ÌõÑÍ∏∞', board_at: '2025-08-08T15:50:00', board_views: 260, writer: 'ÏïºÍ≤ΩÎü¨Î≤Ñ', content: 'Ïó¨Ïàò Î∞§Î∞îÎã§ Ïó¨ÌñâÏùÄ Ï†ïÎßê ÎÇ≠ÎßåÏ†ÅÏûÖÎãàÎã§...' },
        { board_seq: 9, board_title: 'Ï†úÏ≤ú ÌûêÎßÅ Ïó¨Ìñâ ÏΩîÏä§ Ï∂îÏ≤ú', board_at: '2025-08-09T09:10:00', board_views: 180, writer: 'ÌûêÎßÅÎü¨Î≤Ñ', content: 'Ï†úÏ≤úÏóêÏÑú ÌûêÎßÅÌï† Ïàò ÏûàÎäî Ïó¨Ìñâ ÏΩîÏä§Îäî...' },
        {
            board_seq: 10,
            board_title: 'Ïö∏Î¶âÎèÑ, ÎèÖÎèÑ Ïó¨Ìñâ Ï§ÄÎπÑ ÌåÅ',
            board_at: '2025-08-10T20:20:00',
            board_views: 220,
            writer: 'Î∞îÎã§ÌÉêÌóòÍ∞Ä',
            content: 'Ïö∏Î¶âÎèÑ, ÎèÖÎèÑ Ïó¨Ìñâ Ï†Ñ Î∞òÎìúÏãú Ï§ÄÎπÑÌï¥Ïïº Ìï† Í≤ÉÎì§...',
        },
    ];

    const boardDetail = mockData.find((item) => item.board_seq === parseInt(board_seq));

    // useEffect(() => {
    //   const fetchBoardDetail = async () => {
    //     try {
    //       const response = await axios.get(`/board/${board_seq}`);
    //       setBoardDetail(response.data);
    //       setEditedTitle(response.data.title);
    //       setEditedContent(response.data.content);
    //       if (response.data.img) {
    //         setPreviewImage(`http://localhost:8300${response.data.img}`);
    //       }
    //     } catch (error) {
    //       console.error("Í≤åÏãúÍ∏Ä ÏÉÅÏÑ∏ Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî ÎèÑÏ§ë Ïò§Î•ò Î∞úÏÉù:", error);
    //     }
    //   };

    //   fetchBoardDetail();
    // }, [board_seq]);

    // const handleEdit = () => {
    //   setIsEditing(true);
    // };

    // const handleSave = async () => {
    //   const formData = new FormData();
    //   formData.append("board_title", editedTitle);
    //   formData.append("board_content", editedContent);
    //   if (selectedFile) {
    //     formData.append("board_img", selectedFile);
    //   }

    //   try {
    //     const response = await axios.put(`/board/update/${board_seq}`, formData, {
    //       headers: {
    //         "Content-Type": "multipart/form-data",
    //       },
    //     });
    //     setIsEditing(false);
    //     // ÏóÖÎç∞Ïù¥Ìä∏Îêú Îç∞Ïù¥ÌÑ∞Î•º ÏÉÅÌÉúÏóê Î∞òÏòÅ
    //     setBoardDetail({
    //       ...boardDetail,
    //       title: editedTitle,
    //       content: editedContent,
    //       img: response.data.img || boardDetail.img
    //     });
    //     // Ïù¥ÎØ∏ÏßÄÍ∞Ä Î≥ÄÍ≤ΩÎêú Í≤ΩÏö∞, ÎØ∏Î¶¨Î≥¥Í∏∞ Ïù¥ÎØ∏ÏßÄÎ•º ÏóÖÎç∞Ïù¥Ìä∏
    //     if (response.data.img) {
    //       setPreviewImage(`http://localhost:8300${response.data.img}?${new Date().getTime()}`);
    //     }
    //     Swal.fire({
    //       icon: 'success',
    //       text: 'ÏàòÏ†ï ÏÑ±Í≥µ!',
    //       confirmButtonText: 'ÌôïÏù∏'
    //     });
    //   } catch (error) {
    //     console.error("Í≤åÏãúÍ∏Ä ÏàòÏ†ï ÎèÑÏ§ë Ïò§Î•ò Î∞úÏÉù:", error);
    //     Swal.fire({
    //       icon: 'error',
    //       text: 'ÏàòÏ†ï ÎèÑÏ§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.',
    //       confirmButtonText: 'ÌôïÏù∏'
    //     });
    //   }
    // };

    const handleFileChange = (e) => {
        const file = e.target.files[0];
        if (file) {
            setSelectedFile(file);
            setPreviewImage(URL.createObjectURL(file));
        }
    };

    const triggerFileInput = () => {
        document.getElementById('imageInput').click();
    };

    const handleRemoveImage = () => {
        setPreviewImage('');
        setSelectedFile(null);
    };

    function deletepost() {
        Swal.fire({
            icon: 'question',
            text: 'Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
            showCancelButton: true,
            confirmButtonText: 'ÌôïÏù∏',
            cancelButtonText: 'Ï∑®ÏÜå',
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    await axios.delete(`/board/${board_seq}`);
                    Swal.fire({
                        icon: 'success',
                        text: 'ÏÇ≠Ï†ú ÏÑ±Í≥µ!',
                        confirmButtonText: 'ÌôïÏù∏',
                    }).then(() => {
                        navigate('/Board');
                    });
                } catch (error) {
                    console.error('Í≤åÏãúÍ∏Ä ÏÇ≠Ï†ú ÎèÑÏ§ë Ïò§Î•ò Î∞úÏÉù:', error);
                    Swal.fire({
                        icon: 'error',
                        text: 'ÏÇ≠Ï†ú ÎèÑÏ§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.',
                        confirmButtonText: 'ÌôïÏù∏',
                    });
                }
            }
        });
    }

    return (
        <>
            <Row className="mt-5"></Row>
            <Container className="detail-container pt-5 mt-5">
                {seq === '0' && !isEditing && (
                    <Row className="button-group">
                        <Col>
                            {/* <Button onClick={handleEdit} variant='warning' className="btn me-2"> */}
                            <Button variant="warning" className="btn me-2"></Button>
                            <Button onClick={deletepost} variant="danger" className="btn">
                                ÏÇ≠Ï†ú
                            </Button>
                        </Col>
                    </Row>
                )}
                {isEditing ? (
                    <div className="detail-content">
                        <Form.Group controlId="formTitle" className="title">
                            <Form.Label>Ï†úÎ™©</Form.Label>
                            <Form.Control type="text" value={editedTitle} onChange={(e) => setEditedTitle(e.target.value)} placeholder="Ï†úÎ™©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" />
                        </Form.Group>
                        <Form.Group controlId="formContent" className="content">
                            <Form.Label>ÎÇ¥Ïö©</Form.Label>
                            <Form.Control as="textarea" rows={10} value={editedContent} onChange={(e) => setEditedContent(e.target.value)} placeholder="ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" />
                        </Form.Group>
                        <Form.Group controlId="formFile" className="file">
                            <Form.Label>Ïù¥ÎØ∏ÏßÄ ÌååÏùº</Form.Label>
                            <Button variant="primary" onClick={triggerFileInput} className="custom-select-button">
                                Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù
                            </Button>
                            <input id="imageInput" type="file" className="hidden-file-input" style={{ display: 'none' }} onChange={handleFileChange} />
                            {previewImage && (
                                <div className="image-preview">
                                    <img src={previewImage} alt="ÎØ∏Î¶¨Î≥¥Í∏∞" style={{ maxWidth: '100%', marginTop: '10px' }} />
                                    <Button variant="danger" onClick={handleRemoveImage} style={{ marginTop: '10px' }}>
                                        Ïù¥ÎØ∏ÏßÄ Ï†úÍ±∞
                                    </Button>
                                </div>
                            )}
                        </Form.Group>
                        {/* <Button onClick={handleSave} variant="success" className="mt-3"> */}
                        <Button variant="success" className="mt-3">
                            Ï†ÄÏû•
                        </Button>
                    </div>
                ) : (
                    <>
                        <div className="detail-content">
                            <h3 className="detail-title">{boardDetail?.title}</h3>
                            <h3 className="detail-title">{boardDetail?.board_title}</h3>
                            <p className="detail-info">
                                ÏûëÏÑ±Ïûê: {boardDetail?.writer} | ÎÇ†Ïßú: {boardDetail?.board_at.substring(0, 10)} | Ï°∞ÌöåÏàò: {boardDetail?.board_views}
                            </p>
                            <hr />
                            <p className="detail-text">{boardDetail?.content}</p>
                            {boardDetail?.img && <img src={previewImage} alt="Board Detail" style={{ maxWidth: '100%' }} />}
                        </div>
                        <Row className="t2 mb-4 pt-5" id="detail">
                            <Col xs="auto">
                                ÎåìÍ∏Ä <span style={{ color: '#6DD2FF' }}>({comments.length}Í∞ú)</span>
                            </Col>
                        </Row>
                        <Row>
                            <Col>
                                <CommentForm onSubmit={addComment} />
                            </Col>
                        </Row>
                        <Row>
                            <CommentList comments={comments} />
                        </Row>
                    </>
                )}
            </Container>
        </>
    );
};

export default DetailPage;
