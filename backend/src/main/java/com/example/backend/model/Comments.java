package com.example.backend.model;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

import java.time.LocalDateTime;

import com.example.backend.dto.request.Comment.CommentCreateRequestDTO;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class Comments {
    private Long comment_seq;
    private TargetType target_type;
    private Long target_seq;
    private String mem_id;
    private String comment_content;
    private LocalDateTime created_at;
    private LocalDateTime updated_at;
    private LocalDateTime deleted_at;

    public Comments(CommentCreateRequestDTO requestDTO) {
        this.comment_content = requestDTO.getComment_content();
    }
}

// CREATE TABLE COMMENTS (
//          comment_seq     NUMBER GENERATED BY DEFAULT AS IDENTITY,
//          target_type     VARCHAR2(50) NOT NULL,
//          target_seq      NUMBER NOT NULL,
//          mem_id          VARCHAR2(50) NOT NULL,
//          comment_content CLOB NOT NULL,
//          created_at      TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
//          updated_at      TIMESTAMP DEFAULT NULL,
//          deleted_at      TIMESTAMP DEFAULT NULL,
//          CONSTRAINT PK_COMMENT PRIMARY KEY (comment_seq),
//         CONSTRAINT FK_COMMENT_MEMBER FOREIGN KEY (mem_id) REFERENCES MEMBER(mem_id) ON DELETE
//       CASCADE
//     );
